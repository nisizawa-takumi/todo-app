name: todo-app
services:
  frontend:
    image: node:24.1-bookworm-slim #Node.js 24.1（Debian Bookwormベースの軽量イメージ）をベースにしています。
    working_dir: /container/todo-app-frontend #作業ディレクトリを/containerに設定します。以降のコマンドはこのディレクトリ内で実行されます。
    volumes:
      - ./frontend/container:/container #コンテナ外の./frontend/containerとコンテナ内の/containerを同期
      #- ./frontend/container/todo-app-frontend/node_modules:/container/todo-app-frontend/node_modules # jsの設定ファイル情報をコンテナと同期することで、コンテナを消してもデータが残る
    ports:
      - "3000:3000" # nextjsでの開発用ローカルサーバのポート
      - "3001:3001" # json-serverで開発用の一時サーバー(DBの代わり)を使うためのポート
      - "6006:6006" # storybookでのストーリー確認サイト立ち上げのためのポート
      - "9323:9323" # playwrightレポート用
    command: sh -c "npm install && npx playwright install --with-deps && npm run dev:all" # js依存関係install && playwrightブラウザ情報install && 開発用サーバー立ち上げ

  backend:
    image: node:24.1-bookworm-slim
    working_dir: /app
    volumes:
      - ./backend/app:/app
    ports:
      - "4000:4000"
    command: sh -c "npm install && npm run dev"
    environment:
      - DATABASE_URL=mysql://root:password@mysql:3306/todo_db
    depends_on:
      - mysql

  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: todo_db
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama

  llm-api:
    build: ./llm-scheduler/api
    working_dir: /app
    volumes:
      - ./llm-scheduler/api:/app
    ports:
      - "8080:8080"
    depends_on:
      - ollama

volumes:
  mysql-data:
  ollama-data:
